name: Deploy to AWS

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug
        run: |
          pwd
          ls -la
          echo "Repo contents:"
          find . -name "template.yaml"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOY_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build
        run: sam build --use-container | cat

      - name: Deploy API
        run: |
          # Try to delete existing failed stack first
          sam delete --stack-name deli-queue --no-prompts || true
          # Wait a moment for deletion to complete
          sleep 10
          # Deploy fresh stack
          sam deploy --no-confirm-changeset --stack-name deli-queue --resolve-s3 --capabilities CAPABILITY_IAM --parameter-overrides StageName=prod EnableDynamoDB=true | cat

      - name: Get API URL
        id: get_api
        run: echo "API_URL=$(aws cloudformation describe-stacks --stack-name deli-queue --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' --output text)" >> $GITHUB_OUTPUT

      - name: Inject API URL into config.js
        run: |
          mkdir -p dist/static
          cp -r static dist/
          cp admin_control_panel.html dist/
          cp clicker_web_app.html dist/
          cp attendant_web_app.html dist/
          cp guest_web_app.html dist/
          cp payment_mock.html dist/
          cp status_dashboard.html dist/
          cp payment_mock.html dist/
          echo "window.API_BASE='${{ steps.get_api.outputs.API_URL }}'" > dist/static/config.js

      - name: Upload static site to S3
        run: |
          aws s3 sync dist s3://${{ secrets.S3_BUCKET }} --delete


